{{- if .Values.enable.grafana }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/grafana/config-map.yml") . | sha256sum }}
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:7.4.3-ubuntu
        name: grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: rOlYHeRPHyde
        {{- if .Values.grafana.reverseProxy }}
        - name: GF_SERVER_ROOT_URL
          value: {{ .Values.grafana.rootUrl | quote }}
        - name: GF_SERVER_SERVE_FROM_SUB_PATH
          value: "true"
        {{- end }}
        #- name: GF_SERVER_DOMAIN
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources/datasource.yaml
          subPath: datasource.yaml
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards/
        - name: grafana-providers
          mountPath: /etc/grafana/provisioning/dashboards
      volumes:
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
      - name: grafana-providers
        configMap:
          name: grafana-providers
      - name: grafana-persistent-storage
        emptyDir: {}
{{- end }}
